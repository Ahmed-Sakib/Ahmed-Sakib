#!/bin/bash

menu_choice=""
record_file="bookRecords.ldb"
temp_file=/tmp/ldb.$$
user_file="userAccounts.ldb"
borrowed_file="borrowedBooks.ldb"
touch $temp_file; chmod 644 $temp_file
trap 'rm -f $temp_file' EXIT

get_return(){
    printf '\tPress return\n'
    read x
    return 0
}

get_confirm(){
    printf '\tAre you sure?\n'
    while true
    do
        read x
        case "$x" in
            y|yes|Y|Yes|YES)
            return 0;;
            n|no|N|No|NO)
                printf '\ncancelled\n'
                return 1;;
            *) printf 'Please enter yes or no\n';;
        esac
    done
}

set_menu_choice(){
    clear
    printf 'Options:-\n'
    printf '\ta) Add new Books records\n'
    printf '\tb) Find Books\n'
    printf '\tc) Edit Books\n'
    printf '\td) Remove Books\n'
    printf '\te) View Books\n'
    printf '\tf) Borrow a Book\n'
    printf '\tg) Return a Book\n'
    printf '\th) Quit\n'
    printf 'Please enter the choice then press return\n'
    read menu_choice
    return
}

insert_record(){
    echo $* >>$record_file
    return
}

add_books(){
    printf 'Enter Books category:-\n'
    read tmp
    liCatNum=${tmp%%,*}

    printf 'Enter Books title:-\n'
    read tmp
    liTitleNum=${tmp%%,*}

    printf 'Enter Author Name:-\n'
    read tmp
    liAuthorNum=${tmp%%,*}

    printf 'About to add new entry\n'
    printf "$liCatNum\t$liTitleNum\t$liAuthorNum\n"

    if get_confirm; then
        insert_record $liCatNum,$liTitleNum,$liAuthorNum
    fi

    return
}

find_books(){
    echo "Enter book title to find:"
    read book2find
    grep "$book2find" $record_file > $temp_file

    linesfound=`cat $temp_file|wc -l`

    case `echo $linesfound` in
    0)    echo "Sorry, nothing found"
          get_return
          return 0
          ;;
    *)    echo "Found the following"
          cat $temp_file
          get_return
          return 0
    esac
    return
}

remove_books(){
    linesfound=`cat $record_file|wc -l`

    case `echo $linesfound` in
    0)    echo "Sorry, nothing found\n"
          get_return
          return 0
          ;;
    *)    echo "Found the following\n"
          cat $record_file ;;
    esac
    printf "Type the book title which you want to delete\n"
    read searchstr

    if [ "$searchstr" = "" ]; then
        return 0
    fi
    grep -v "$searchstr" $record_file > $temp_file
    mv $temp_file $record_file
    printf "Book has been removed\n"
    get_return
    return
}

view_books(){
    printf "List of books are\n"
    cat $record_file
    get_return
    return
}

edit_books(){
    printf "List of books are\n"
    cat $record_file
    printf "Type the title of the book you want to edit\n"
    read searchstr
    if [ "$searchstr" = "" ]; then
        return 0
    fi
    grep -v "$searchstr" $record_file > $temp_file
    mv $temp_file $record_file
    printf "Enter the new record\n"
    add_books
}

create_account(){
    printf "Enter a username: "
    read username
    if grep -q "$username" $user_file; then
        printf "Username already exists. Try another one.\n"
        return
    fi
    printf "Enter a password: "
    read -s password
    echo "$username,$password" >> $user_file
    printf "\nAccount created successfully.\n"
}

login(){
    printf "Enter username: "
    read username
    printf "Enter password: "
    read -s password
    if grep -q "$username,$password" $user_file; then
        current_user=$username
        printf "\nLogin successful.\n"
    else
        printf "\nInvalid username or password.\n"
        current_user=""
    fi
}

borrow_book(){
    if [ -z "$current_user" ]; then
        printf "You need to log in first.\n"
        return
    fi
    printf "Enter book title to borrow: "
    read book2borrow
    if grep -q "$book2borrow" $record_file; then
        echo "$current_user,$book2borrow" >> $borrowed_file
        printf "Book borrowed successfully.\n"
    else
        printf "Book not found.\n"
    fi
}

return_book(){
    if [ -z "$current_user" ]; then
        printf "You need to log in first.\n"
        return
    fi
    printf "Enter book title to return: "
    read book2return
    if grep -q "$current_user,$book2return" $borrowed_file; then
        grep -v "$current_user,$book2return" $borrowed_file > $temp_file
        mv $temp_file $borrowed_file
        printf "Book returned successfully.\n"
    else
        printf "You haven't borrowed this book.\n"
    fi
}

rm -f $temp_file
if [ ! -f $record_file ]; then
    touch $record_file
fi
if [ ! -f $user_file ]; then
    touch $user_file
fi
if [ ! -f $borrowed_file ]; then
    touch $borrowed_file
fi

clear
printf '\n\n\n'
printf 'Mini library Management\n'
sleep 2

current_user=""
quit="n"
while [ "$quit" != "y" ]; do

    if [ -z "$current_user" ]; then
        printf "Options:\n"
        printf "\t1) Create an account\n"
        printf "\t2) Login\n"
        printf "\t3) Quit\n"
        printf "Please enter your choice: "
        read user_choice
        case "$user_choice" in
            1) create_account;;
            2) login;;
            3) quit=y;;
            *) printf "Sorry, choice not recognized\n";;
        esac
    else
        set_menu_choice
        case "$menu_choice" in
            a) add_books;;
            b) find_books;;
            c) edit_books;;
            d) remove_books;;
            e) view_books;;
            f) borrow_book;;
            g) return_book;;
            h) quit=y;;
            *) printf "Sorry, choice not recognized\n";;
        esac
    fi
done

rm -f $temp_file
echo "Finished"

exit 0
